# The following lines were added by compinstall

zstyle ':completion:*' completer _expand _complete _ignored _correct _approximate _prefix
zstyle :compinstall filename '/home/roosemberth/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000000
SAVEHIST=1000000
setopt appendhistory beep notify
bindkey -v
# End of lines configured by zsh-newuser-install

# enable color support of ls and also add handy aliases
alias ls='ls --color=auto'
#alias dir='dir --color=auto'
#alias vdir='vdir --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# quite handy!
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."

export EDITOR="vim"

# This will fix broken (bash imported) scripts which use "for var in ${list of space separated variables goes here}" loops
setopt sh_word_split

# "Include" custom shell functions. They need to have a proper function declaration
# ej. --------------------------------------------------------
# function myfunc(){
#	# cool function code here
# }
# ----------------- file: ~/dotfiles/zsh/functions/myfunc.func
# This functions can be located in subdirectories too, but only the files ending 
# with '.func' will be included. 

ADDITIONAL_FUNCTIONS=$(find ~/dotfiles/zsh/functions -type f -iname "*.func")

for newFunction in ${ADDITIONAL_FUNCTIONS}; do
	source ${newFunction}
	if [[ $? != 0 ]]; then
		echo "Error processing additional function ${newFunction}"
	fi
done

unset ADDITIONAL_FUNCTIONS

# This will allow "Special dirs" (./ and ../) to be available as autocomplete
zstyle ':completion:*' special-dirs true

# Space for small functions which do not merite to be in a single file ----------
function reload(){
	source ~/.zshrc
}

function whoIsMyParent(){
	ps aux | grep -v grep | grep $PPID
}

function aps(){
	ps aux | grep -v grep | grep -i $1
}

function lastCommand(){
	history l | tail -n 1 | sed 's/[0-9]*[ ]*//'
}

function shakeInternet(){
	INTERFACE=wlan0
	[[ ! -z $1 ]] && INTERFACE=$1
	sudo dhclient ${INTERFACE} &>/dev/null && ping epfl.ch -c 3 &>/dev/null && echo "Internet shound be fine."
	unset INTERFACE
}

# -------------------------------------------------------------------------------

# This will load local "Host-dependant" zsh config files, so we won't polute git repo :)
if [[ -e ~/.zshrc.local ]]; then
	source ~/.zshrc.local
fi

if [[ -e /opt/tmuxinator/completion/tmuxinator.zsh ]]; then
	source /opt/tmuxinator/completion/tmuxinator.zsh
fi
