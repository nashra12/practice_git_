#!/usr/bin/env zsh
# This macro will setup the development environment for developping on esp

local function errorExit(){
	echo Internal Error: ${@:-"Unspecified error"}
	exec zsh
}

function develEspressif(){
	ESP_DEVEL_HOME="/Storage/DevelHub/ESP8266-Devel/"
	ESP_TOOLCHAIN_BUILDER="${ESP_DEVEL_HOME}/esp-open-sdk/"
	ESP_TOOLCHAIN="${ESP_TOOLCHAIN_BUILDER}/xtensa-lx106-elf/bin"
	if [[ ! -d ${ESP_TOOLCHAIN_BUILDER} ]]; then
		echo "Could not find the toolchain builder (esp-open-sdk) directory, please fix me\!"
	fi
	echo "Would you like to update the toolchain? Y/[N]"
	read doUpdate
	if [[ ${doUpdate:-n} == "y" || ${doUpdate} == "Y" ]]; then
		cd ${ESP_TOOLCHAIN_BUILDER}
		make clean                    || errorExit cleaning old builds
		git pull                      || errorExit pull from remote
		git submodule sync            || errorExit syncing remote submodules
		git submodule update          || errorExit updating remote submodules
		ionice nice make STANDALONE=n || errorExit building toolchain
	fi
	unset doUpdate

	if [[ -d ${ESP_DEVEL_HOME} ]]; then
		cd ${ESP_DEVEL_HOME}
	else 
		echo "Warning: ESP_DEVEL_HOME:${ESP_DEVEL_HOME} does not exist, fix me\!"
	fi
	
	varK="setupToolchainTemp-$RANDOM"
	mkdir -p /tmp/${varK}

	cat <<- EOF > /tmp/${varK}/.zshrc
		ZDOTDIR="${ZDOTDIR:=~/}"
		rm -fr /tmp/${varK}
		if [[ -f \${ZDOTDIR}/.zshrc ]]; then	
			source \${ZDOTDIR}/.zshrc
		fi
		export PATH="${ESP_TOOLCHAIN}:\$PATH"
		subPS1="\${PS1%??}"
		[[ "\${subPS1:\$((\${#subPS1}-1))}" == "%" ]] && subPS1="\${subPS1%?}"
		export PS1="\${subPS1} - [Devel Espressif]%# "
		export esp_open_sdk_hone="${ESP_TOOLCHAIN_BUILDER}"
		clear
		echo 
		pwd
	EOF

	export ZDOTDIR=/tmp/${varK}
	unset varK
	exec zsh -i
}
