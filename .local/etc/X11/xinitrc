#!/bin/sh
# Written by ayekat on a rainy day in october 2012

# The display manage doesn't usually run us on a login shell, souce what's missing.
if [ -f ${HOME}/dotfiles/sh_environment ]; then
	. ${HOME}/dotfiles/sh_environment
fi

# 
if [ -f ${XDG_CONFIG_HOME}/sh/profile ]; then
	. ${XDG_CONFIG_HOME}/sh/profile
fi

cmds_exist() {
	for c in "$@"; do
		which "$c" >/dev/null 2>&1 || return 1
	done
}


# First of all, make sure we are in the home directory, to avoid weird default
# working directory paths when opening a shell under X:
cd


# SYSTEM-WIDE ------------------------------------------------------------------

if [ -d /etc/X11/xinit/xinitrc.d ]; then
	for f in /etc/X11/xinit/xinitrc.d/*.sh; do
		if [ -r "$f" ]; then
			. "$f"
		fi
	done
	unset f
fi

if [ -d "${XDG_CONFIG_HOME}/X11/xinitrc.d" ]; then
	for f in "${XDG_CONFIG_HOME}"/X11/xinitrc.d/*.sh; do
		if [ -r "$f" ]; then
			. "$f"
		fi
	done
	unset f
fi


# INPUT/OUTPUT -----------------------------------------------------------------

# FIXME: Need to properly deploy my layout on nixos (A package maybe?).
# Set core keyboard layout to US
#setxkbmap us
#
## Set Laptop's computer Keyboard to Systech13, if it can't find it, then set the core keyboard to Systech13
#LKBID="$(xinput --list | grep "AT Translated Set 2 keyboard" | grep -oP 'id=\K[0-9]+')"
#if [ -z "$LKBID" ]; then
#    setxkbmap -layout Systech13
#else
#    setxkbmap -device $LKBID -layout Systech13 || setxkbmap -layout Systech13
#fi
setxkbmap us intl -option caps:swapescape

# SERVICES ---------------------------------------------------------------------

# Load X resources:
cmds_exist xrdb && xrdb "$XDG_CONFIG_HOME/X11/Xresources"

# Set the wallpaper:
cmds_exist nitrogen && nitrogen --set-auto background-images/venice.png

# Enable Japanese input:
if cmds_exist ibus-daemon; then
	export GTK_IM_MODULE=ibus
	export QT_IM_MODULE=ibus
	export XMODIFIERS='@im=ibus'
	ibus-daemon -drx
fi

# Set the hinting property for freetype (see /etc/profile.d/freetype2.sh):
export FREETYPE_PROPERTIES='truetype:interpreter-version=35'

# Notifications manager
cmds_exist dunst && dunst "$XDG_CONFIG_HOME/dunst/dunstrc" &

# When pressing Shift_L alone send 'escape' instead
cmds_exist xcape && xcape -e 'Shift_L=Escape'

cmds_exist lxpolkit && lxpolkit &

# WM ---------------------------------------------------------------------------

# If no WM is specified, default to xmonad:
[ -z "$wm" ] && wm=xmonad

# Some Java applications refuse to work correctly when they don't know the WM
# (happens often with tiling WMs); set the WM name to a value known to Java to
# fix that:
if cmds_exist wmname; then
	case "$wm" in
		fvwm|xmonad|i3|dwm|karuiwm)
			wmname LG3D
			# export _JAVA_AWT_WM_NONREPARENTING=1
			;;
	esac
fi

# Launch WM and log all of its output:
session_logdir="$XDG_LOG_HOME/X11/$DISPLAY"
session_logfile="${session_logdir}/$(date +%s).log"
session_lockapp="xtrlock-pam"
mkdir -p "$session_logdir"
ln -sf "$session_logfile" "$session_logdir/latest"
while true; do
	if cmds_exist xss-lock "$session_lockapp"; then
		xset s 60
		xss-lock "$session_lockapp" &
		xss_lock_pid=$!
	fi

	echo Executing WM...
	"$wm"

	cmds_exist xss-lock && kill $xss_lock_pid

	if cmds_exist zenity; then
		zenity --question --text="$wm exited, do you want to run another WM?"
		test $? -eq 0 || break
		new_wm="$(zenity --entry --text="Window manager to start:" --entry-text="$wm")"
		[ -z "$new_wm" ] && break
		wm="$new_wm"
	else
		break
	fi
done >"$session_logfile" 2>"$session_logfile"
